name: ci

# Controls when the action will run
on:

  # Trigger the workflow on all pushes
  push:
    branches:
    - '**'
    tags:
    - '**'

  # Trigger the workflow on all pull requests
  pull_request: ~

  # Allow workflow to be dispatched on demand
  workflow_dispatch: ~

jobs:
  checks:
    name: checks
    runs-on: ubuntu-20.04
    outputs:
      head-tag: ${{ steps.run-checks.outputs.head-tag }}
      is-external-pr: ${{ steps.run-checks.outputs.is-external-pr }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Fetch Tags
        run: git fetch --depth=1 origin +refs/tags/*:refs/tags/*

      - name: Run Checks
        id: run-checks
        run: |
          echo ::set-output name=head-tag::$(git tag --points-at HEAD)
          echo ::set-output name=is-external-pr::$([ "${{ github.event_name }}" == "pull_request" ] && [ "${{ github.event.pull_request.head.repo.full_name }}" != "${{ github.event.pull_request.base.repo.full_name }}" ] && echo 'true')

  ci:
    name: ci
    needs:
    - checks
    if: (github.event_name == 'push' && (needs.checks.outputs.head-tag == '' || contains(github.ref, 'refs/tags/'))) || (github.event_name == 'pull_request' && needs.checks.outputs.is-external-pr == 'true')
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: 12

    - name: Install Dependencies
      run: npm install

    - name: Code QA
      run: npm run lint -- --no-fix

    - name: Run Tests
      run: npm test

  cd:
    name: cd
    if: github.event_name == 'push' && contains(github.ref, 'refs/tags/')
    needs:
    - ci
    runs-on: ubuntu-20.04
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v2

    - name: Setup Node
      uses: actions/setup-node@v2
      with:
        node-version: 12

    - name: Check Version
      id: check-version
      shell: bash -eux {0}
      run: |
        release=${GITHUB_REF##*/}
        version=$(npm -s run env echo '$npm_package_version')
        echo ::set-output name=is-new-release::$([ "$release" == "$version" ] && echo true || echo false)

    - name: Publish
      if: steps.check-version.outputs.is-new-release == 'true'
      run: |
        npm publish --dry-run

    - name: Cleanup
      if: steps.check-version.outputs.is-new-release == 'true'
      run: |
        npm version
